extend type Query {
    getPrices(size: Long = 10, active: Boolean = true): [Price!]!
    getPriceById(priceId: String!): Price!
    getProducts(size: Long = 10, active: Boolean = true): [Product!]!
    getProductById(productId: String!): Product!
}

extend type Self {
    getStripeCustomer: Customer!
    getSubscriptionById(subscriptionId: String!): StripeSubscription!
    subscriptions: [StripeSubscription!]!
    subscriptionInvoicePreview(subscriptionId: String!): Invoice!
}

extend type SelfMutation {
    createSubscription(priceId: String!, priceQuantity: Long!): CreateSubscriptionResult!
    updateSubscription(newPriceId: String!, newPriceQuantity: Long!, subscriptionId: String!): StripeSubscription!
    cancelSubscription(subscriptionId: String!): StripeSubscription!
}

interface Items {
    data: [ItemsData!]
    url: String
}

type Price {
    id: String!
    active: Boolean!
    currency: String
    lookupKey: String
    nickname: String
    product: String
    unitAmount: Long!
    unitAmountDecimal: String!
}

type Customer {
    id: String!
    name: String
    email: String
    address: String
    balance: Long
    created: Long
    currency: String
    description: String
}

type Product {
    id: String
    active: Boolean
    created: Long
    defaultPrice: String
    description: String
    features: [String!]
    livemode: Boolean
    name: String
    updated: Long
    url: String
}

type StripeSubscription {
    id: String!
    cancelAt: Long
    canceledAt: Long
    created: Long!
    currency: String
    currentPeriodEnd: Long!
    currentPeriodStart: Long!
    customer: String
    daysUntilDue: Long
    description: String
    endedAt: Long
    items: Items
    latestInvoice: String
    livemode: Boolean
    startDate: Long
    status: String
    trialEnd: Long
    clientSecret: String
}

type Invoice {
    id: String!
    accountCountry: String
    accountName: String
    amountDue: Long
    amountPaid: Long
    amountRemaining: Long
    amountShipping: Long
    applicationFeeAmount: Long
    attemptCount: Long
    attempted: Boolean
    autoAdvance: Boolean
    billingReason: String
    collectionMethod: String
    created: Long
    currency: String
    customer: String
    customerAddress: String
    customerEmail: String
    customerName: String
    description: String
    dueDate: Long
    effectiveAt: Long
    endingBalance: Long
    livemode: Boolean,
    number: Long,
    paid: Boolean,
    paidOutOfBand: Boolean,
    periodEnd: Long,
    periodStart: Long,
    postPaymentCreditNotesAmount: Long,
    prePaymentCreditNotesAmount: Long,
    startingBalance: Long,
    status: String,
    subscription: String,
    subtotal: Long,
    subtotalExcludingTax: Long,
    total: Long,
    totalExcludingTax: Long,
    webhooksDeliveredAt: String
}

type CreateSubscriptionResult {
    subscription: StripeSubscription
    clientSecret: String
}

type SubscriptionItem {
    id: String
    created: Long
    price: Price
    subscription: String
}

type InvoiceItem {
    id: String
    amount: Long
    amountExcludingTax: Long
    currency: String
    description: String
    discountable: Boolean
    invoiceItem: String
    livemode: Boolean
    price: Price
    proration: Boolean
    quantity: Long
    subscription: String
    unitAmountExcludingTax: String
    lines: Items!
}

union ItemsData = SubscriptionItem | InvoiceItem